-- Deaggregates totals, returns data for each player and tournament
SELECT
	*
FROM
	(
		SELECT
			PLAYER,
			TOURNAMENT_DATE,
			TOURNAMENT_NAME,
			CASE
				WHEN "MEASURED ROUNDS" < DIFF_ROUNDS THEN "TOTAL SG:T"
				ELSE "TOTAL SG:T" - COALESCE(DIFF_SG_T, 0)
			END AS SG_TOTAL,
			CASE
				WHEN "MEASURED ROUNDS" < DIFF_ROUNDS THEN "TOTAL SG:T2G"
				ELSE "TOTAL SG:T2G" - COALESCE(DIFF_SG_T2G, 0)
			END AS SG_T2G,
			CASE
				WHEN "MEASURED ROUNDS" < DIFF_ROUNDS THEN "TOTAL SG:P"
				ELSE "TOTAL SG:P" - COALESCE(DIFF_SG_P, 0)
			END AS SG_P,
			CASE
				WHEN "MEASURED ROUNDS" < DIFF_ROUNDS THEN "MEASURED ROUNDS"
				ELSE "MEASURED ROUNDS" - COALESCE(DIFF_ROUNDS, 0)
			END AS ROUNDS
		FROM
			(
				SELECT
					PLAYER,
					TOURNAMENT_DATE,
					TOURNAMENT_NAME,
					"TOTAL SG:T",
					LAG("TOTAL SG:T") OVER (
						PARTITION BY
							PLAYER
						ORDER BY
							TOURNAMENT_DATE ASC,
							"MEASURED ROUNDS" ASC
					) AS DIFF_SG_T,
					"TOTAL SG:T2G",
					LAG("TOTAL SG:T2G") OVER (
						PARTITION BY
							PLAYER
						ORDER BY
							TOURNAMENT_DATE ASC,
							"MEASURED ROUNDS" ASC
					) AS DIFF_SG_T2G,
					"TOTAL SG:P",
					LAG("TOTAL SG:P") OVER (
						PARTITION BY
							PLAYER
						ORDER BY
							TOURNAMENT_DATE ASC,
							"MEASURED ROUNDS" ASC
					) AS DIFF_SG_P,
					"MEASURED ROUNDS",
					LAG("MEASURED ROUNDS") OVER (
						PARTITION BY
							PLAYER
						ORDER BY
							TOURNAMENT_DATE ASC,
							"MEASURED ROUNDS" ASC
					) AS DIFF_ROUNDS
				FROM
					SG_TOTAL
			)
	)
WHERE
	ROUNDS > 0
	AND ROUNDS <= 4